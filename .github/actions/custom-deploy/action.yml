name: 'Custom Deploy'
description: 'Simulated application deployment'

inputs:
  environment:
    description: 'Target environment (staging/production)'
    required: true
    default: 'staging'
  version:
    description: 'Commit SHA or version tag to deploy'
    required: true
  notify-team:
    description: 'Simulate sending a notification to the team (`true`/`false`)'
    required: false
    default: 'false'

outputs:
  deployment_url:
    description: 'URL of the deployed application'
    value: ${{ steps.deploy.outputs.deployment_url }}
  deployment_time:
    description: 'Deployment timestamp in ISO8601'
    value: ${{ steps.deploy.outputs.deployment_time }}

runs:
  using: 'composite'
  steps:
    - name: Determine deployment parameters
      id: deploy
      shell: bash
      run: |
        if [ "${{ inputs.environment }}" = "production" ]; then
          echo "Deploying version ${{ inputs.version }} to PRODUCTION on self-hosted runner"
          BASE_URL="https://prod.example.com"
        else
          echo "Deploying version ${{ inputs.version }} to STAGING on GitHub-hosted runner"
          BASE_URL="https://staging.example.com"
        fi

        DEPLOY_URL="$BASE_URL/${{ inputs.version }}"
        echo "deployment_url=$DEPLOY_URL" >> $GITHUB_OUTPUT

        TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        echo "deployment_time=$TIMESTAMP" >> $GITHUB_OUTPUT

        echo "Deployment completed at $TIMESTAMP"

    - name: Notify team about deployment
      if: ${{ inputs.notify-team == 'true' }}
      shell: bash
      run: |
        echo "Notifying team: version ${{ inputs.version }} has been deployed to ${{ inputs.environment }}"
